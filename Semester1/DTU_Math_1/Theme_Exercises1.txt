Part 3
1.d)

a = complex(cmath.sqrt(2)/2,cmath.sqrt(2)/2)
b = complex(1/2,cmath.sqrt(3)/2)

cmath.polar(b)[1]-cmath.polar(a)[1]

e)

a = complex(1,1)
b=complex(2,3)

cmath.polar(a)[0]==cmath.polar(b)[0]
False

Part 4

4)
import cmath
import matplotlib.pyplot as plt
import numpy as np

data = []

a= complex(1,1)
b = complex(2,3)

z = [1,1.2,1.3,1.4,1.6,1.8,2] #0 to 1

for i in z:
    data.append(i*a+b)

x = [ele.real for ele in data]
# extract imaginary part
y = [ele.imag for ele in data]
  
# plot the complex numbers
plt.scatter(x, y)
plt.ylabel('Imaginary')
plt.xlabel('Real')
plt.show()


5)import cmath
import matplotlib.pyplot as plt
import numpy as np

data = []

a= complex(0,2)
b = complex(2,0)

z = [1,1.2,1.3,1.4,1.6,1.8,2] #0

for i in range(0,11):
    data.append(i/10*a+b)

x = [ele.real for ele in data]
# extract imaginary part
y = [ele.imag for ele in data]
  
# plot the complex numbers
plt.scatter(x, y)
plt.ylabel('Imaginary')
plt.xlabel('Real')
plt.show()

